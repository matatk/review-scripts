#!/bin/sh
config_file='review.config.sh'
script=$(basename "$0")

echo "$script: initialise a new review"
echo

help() {
	echo "Usage: $script [-h]"
	echo
	echo "Options:"
	echo "    -h    show this help message"
	echo
	echo "Config file '$config_file' will be created, which you'll"
	echo "have the opportunity to edit."
	echo
	echo "Commits will be saved to the todo file in chronological"
	echo "order."
}

if [ "$1" ]; then
	help
	exit 0
fi

if ! command -v git > /dev/null; then
	echo Git not found - aborting.
	exit 42
fi

if ! git rev-parse --git-dir 2> /dev/null > /dev/null; then
	echo Current directory is not a Git repo - aborting.
	exit 42
fi

if [ ! -r $config_file ]; then
	echo Creating config file...
	cat << EOF > $config_file
# shellcheck shell=sh
export START_DATE='8th August 2017'  # HTML 5.2 CR was published on this day
export END_DATE='17th July 2019'     # Review draft was published on the 16th
export NONESSENTIAL_COMMIT_MSG_EXTENDED_REGEXP='^.{8} (Editorial|Meta): '
export SOURCE_FILE='source'
export URL_COMMIT_START='https://github.com/whatwg/html/commit'  # / added later

export REVIEW_CHANNEL=''  # set this with 'review.channel'
export STATE_PREFIX='review.state'
export STATE_SUFFIX_TO_REVIEW='.todo'
export STATE_SUFFIX_IN_REVIEW='.current'
export STATE_SUFFIX_REVIEWED='.done'
export STATE_SUFFIX_PARKED='.parked'
export FILE_COMMITS_TO_REVIEW="\$STATE_PREFIX\${REVIEW_CHANNEL:+.}\$REVIEW_CHANNEL\$STATE_SUFFIX_TO_REVIEW"
export FILE_COMMIT_IN_REVIEW="\$STATE_PREFIX\${REVIEW_CHANNEL:+.}\$REVIEW_CHANNEL\$STATE_SUFFIX_IN_REVIEW"
export FILE_COMMITS_REVIEWED="\$STATE_PREFIX\${REVIEW_CHANNEL:+.}\$REVIEW_CHANNEL\$STATE_SUFFIX_REVIEWED"
export FILE_COMMITS_PARKED="\$STATE_PREFIX\${REVIEW_CHANNEL:+.}\$REVIEW_CHANNEL\$STATE_SUFFIX_PARKED"

export HTML_STYLE='
	table { border-collapse: collapse; }
	th, td { padding: 0.5em; }
	th { background-color: #555; color: white; }
	tr:nth-child(even) { background-color: #eee; }
	tr:nth-child(odd) { background-color: #ccc; }'
EOF

	echo Config file created, as follows.
	echo
	cat $config_file
	echo
	echo If this is OK, press Enter to continue and the commits will be collated.
	echo Otherwise: interrupt the script, edit the config and re-run the script.
	read -r
fi

# shellcheck source=review.config.sh
. $config_file

if [ -r "$FILE_COMMITS_TO_REVIEW" ] || [ -r "$FILE_COMMITS_REVIEWED" ]; then
	echo "There's already a review in progress - aborting."
	exit 42
fi

commits_in_range() {
	git log --after "$START_DATE" --before "$END_DATE" \
		--oneline --reverse $SOURCE_FILE
}

grep_nonessential_commits() {
	# This is tuned for the HTML standard
	grep -E "$NONESSENTIAL_COMMIT_MSG_EXTENDED_REGEXP" "$@"
}

if [ ! -r "$SOURCE_FILE" ]; then
	echo "Can't find source file: '$SOURCE_FILE'"
	exit 42
fi

echo "$(commits_in_range | wc -l | tr -d '[:space:]') commits between the dates"
echo "$(commits_in_range | grep_nonessential_commits -vc) substantive commits between the dates"
echo

echo Saving commits to review, in chronological order...
commits_in_range | grep_nonessential_commits -v > "$FILE_COMMITS_TO_REVIEW"
echo

echo If you want to maintain separate lists of commits to review, you can
echo separate them into different todo files now, and use \'review.channel\'
echo to switch between them.
